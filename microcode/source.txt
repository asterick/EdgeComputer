/*
 * privileged
 */

macro (next_operation) {
	mdr.l = [A3], A3.l = A3.l + 1; if (@c) { A3.h = A3.h + 1; }
}

macro (push) {
	A2.l = A2.l + 1; if (@c) { A2.h = A2.h + 1; }
	[A3] = mdr.l;
}
macro (pop) {
	mdr.l = [A2];
	A2.l = A2.l + 1; if (@c) { A2.h = A2.h + 1; }
}

// Default operation: No operation
default { #next_operation; }

// Reset / ISR
opcode(0x00) {
	
}

opcode(0x01) {
	privileged, (tlb.index) = R0;
	# next_operation;
}

opcode(0x02) {
	privileged, (tlb.bank) = R0;
	# next_operation;
}

opcode(0x03) {
	privileged, (tlb.flags) = R0;
	# next_operation;
}

// Fast move
opcode(0x04) {
	loop:

	mdr.l = [A0], A0.l = A0.l + 1; if (@c) { A0.h = A0.h + 1; }
	[A1] = mdr.h, A1.l = A1.l + 1; if (@c) { A1.h = A1.h + 1; }
	
	// Decrement counter
	(flags, R0) = R0 - 1; if (~c) { goto loop; }

	# next_operation;
}

// Long branch on carry
opcode(0x05) {
	mdr.l = [A3], A3.l = A3.l + 1; if (@c) { A3.h = A3.h + 1; }
	mdr.h = [A3], A3.l = A3.l + 1; if (@c) { A3.h = A3.h + 1; }
	if (c) { A3.l = mdr; }
	mdr.l = [A3], A3.l = A3.l + 1; if (@c) { A3.h = A3.h + 1; }
	if (c) { A3.h = mdr; }
	# next_operation;
}
