bottom little {
	// General flags
	unsigned:1 	privileged;

	// Latch signals
	unsigned:1 	latch_addr;
	unsigned:1 	latch_flags;

	// ALU Operation control
	// Swap upper and lower 
	unsigned:3	alu_op;						// a + b, a & b, a | b, a ^ b, a - b, a & ~b, a | ~b, a << 1
	unsigned:2	alu_carry;				// off, on, flags, l-bus top

	// Address bus control
	unsigned:2	addr_register;		// A1, A2, A3, A4
	unsigned:1 	bus_direction;		// Write, Read
	unsigned:1 	bus_byte;					// MDR.L, MDR.H
	unsigned:1	mdr_source;				// Z-Bus, Mem

	// TLB Control
	unsigned:1 	tlb_disable;
	unsigned:2 	tlb_write;				// None, Index, Flags, Bank

	// Bus mux
	unsigned:4	l_bus;						// MSR, MDR, R1, R2, R3, R4, R5, R6, A1.L, A1.H, A2.L, A2.H, A3.L, A3.H, A4.L, A4.H
	unsigned:2	r_bus;						// Immediate, MDR, FAULT_CODE, IRQ_VECTOR
	unsigned:3	z_reg;						// none, MSR, R1, R2, R3, R4, R5, R6
	unsigned:3	z_addr;						// A1.L, A1.H, A2.L, A2.H, A3.L, A3.H, A4.L, A4.H

	// Encode 1 hot values for MSR flags (msb = invert)
	unsigned:4	immediate;				// 1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024, 2048, 0, 15, 255, 4095

	// Next state control
	unsigned:1 		flags_source;		// 0 = MSR, 1 = ALU
	unsigned:3		condition_code;	// Never, Always, GreaterOrEqual, Greater, N, V, C, Z
	unsigned:12		next_state;
}
