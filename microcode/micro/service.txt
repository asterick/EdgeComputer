/*
 * Service routines
 */

// --- Reset state ---
macro reset {
	// Initalize Vector table to 0 bios space
	a7.h = 0; 
	a7.l = 0;

	// Supervisor mode, No TLB, Load PC
	msr = 0x0200, r6.l = [a7++];	
                r6.h = [a7++]; 
	a6.l = r6,    r6.l = [a7++];
	              r6.h = [a7++];
	a6.h = r7; 

	// ISR = 0x000004 (Reset vector is unmapped)
	# next;
}

macro isr_jump {
	// Indirect load vector (and enter supervisor mode)
	msr = 0x0200, r6.l = [a6++];
	              r6.h = [a6++];
	              r7.l = [a6++];
	              r7.h = [a6++];
	a6.l = r6; 
	a6.h = r7;
	# next;
}

macro isr_preserve {
	// Preserve PC and MSR
	r7 = msr,  [a5++] = r7.l;
	           [a5++] = r7.h;
	r7 = a6.l, [a5++] = r7.l;
	           [a5++] = r7.h;
	r7 = a6.h, [a5++] = r7.l;
	           [a5++] = r7.h;
}

macro isr {
	# isr_preserve ;

	// Load vector index
	r7 = 0x3FFF & fault_code;
	(a6.l, flags) = a7.l + r7;
	(a6.h) = a7.h + 0 + c;

	# isr_jump;
}

// actual service routines
state(0) { # reset ; }
state(1) { # isr; }
